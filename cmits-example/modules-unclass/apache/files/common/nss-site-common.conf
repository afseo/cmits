
# CVE-2007-4465, TCNO 2007-292-002, due Dec 17
# Also this implements APP3530 in the Application Security & Development STIG.
AddDefaultCharset utf-8

# \implements{apachestig}{WA00615 A22} Enable ``system logging'',
# using CustomLog not TransferLog.
CustomLog "|/usr/bin/logger -t httpd__access -i -p local6.info" common

# \implements{apachestig}{WA00605 A22} Enable error logging.
ErrorLog syslog

# LogLevel is not inherited by virtual hosts from the httpd.conf setting.
# \implements{apachestig}{WA00620 A22} The requirement says we must have a
# LogLevel directive; the check says that if it isn't exactly "warn," that's a
# finding.
LogLevel warn

# \implements{apachestig}{WG340} \implements{apachestig}{WG340 A22} Use TLS. The
# validation procedure listed in the STIG will not work for this and many more
# requirements addressed below, because the expectation in the STIG is that you
# will be using mod_ssl, not mod_nss.
NSSEngine on

NSSCipherSuite +rsa_3des_sha,+fips_3des_sha,+rsa_aes_128_sha,+rsa_aes_256_sha
NSSFIPS on

# SSLv2 is reputedly broken. Don't use it.
# Sharper: \implements{apachestig}{WG340} Use only TLSv1.
# Same: \implements{apachestig}{WG340 A22}
#
# And after all of that - "NSSFIPS on" above makes mod_nss ignore
# NSSProtocol directives and only use the right protocols anyway.
NSSProtocol TLSv1

# \implements{apachestig}{WG145 A22} We're going to use CRLs, not OCSP---for now,
# at least.
NSSOCSP off

#   Use a default OCSP responder. If enabled this will be used regardless
#   of whether one is included in a client certificate. Note that the
#   server certificate is verified during startup.
#
#   NSSOCSPDefaultURL defines the service URL of the OCSP responder
#   NSSOCSPDefaultName is the nickname of the certificate to trust to
#       sign the OCSP responses.
#NSSOCSPDefaultResponder on
#NSSOCSPDefaultURL http://example.com/ocsp/status
#NSSOCSPDefaultName ocsp-nickname
